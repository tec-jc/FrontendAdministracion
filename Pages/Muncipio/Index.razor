@page "/municipio/index"
@inject HttpClient httpClient

<MudText Typo="Typo.h2" Class="ml">Municipios</MudText>

<MudTable Items="@municipios" Hover="true" Bordered="true" Striped="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Lista de Registros</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchText" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Nombre</MudTh>
        <MudTh>Departamento</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
        <MudTd DataLabel="Departamento">@context.IdDepartamento</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private IEnumerable<Municipio> municipios = new List<Municipio>();
    private string searchText = "";

    protected override async Task OnInitializedAsync()
    {
        await getAll();
    }

    private async Task getAll()
    {
        var httpResponse = await httpClient.GetStringAsync("municipio");
        municipios = JsonSerializer.Deserialize<IEnumerable<Municipio>>(httpResponse, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }
}
